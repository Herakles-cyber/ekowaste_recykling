@charset "UTF-8";*,:after,:before{box-sizing:border-box;margin:0;padding:0}html{font-size:62.5%;scroll-behavior:smooth;scroll-padding-top:75px}body{min-height:100vh;font-size:1.6rem;font-family:Montserrat,sans-serif;overflow-x:hidden}#content{max-width:600px;height:65vh;margin:100px auto;background-color:#fff;padding:20px;border-radius:5px;text-align:center}#content h1{color:#24b858}#content p{color:#555}#content a{color:#24b858;text-decoration:none}#content a:hover{text-decoration:underline}.section-title{margin-bottom:.5em;color:#333;font-size:2rem;text-align:center;text-transform:uppercase}.underline{margin:0 auto 2em;width:40px;height:4px;background-color:#24b858}.section-description{padding:.5em 1em;color:#666;font-size:1.6rem;text-align:center}.slide-in{position:relative;scale:0;animation:a 2s ease-in-out forwards}nav{font-size:1.6rem;text-transform:uppercase;background-color:rgba(0,0,0,.8)}nav div{display:flex;justify-content:space-around}nav div a span{font-size:2rem;font-weight:900;letter-spacing:2px;color:#24b858}nav div a p{font-weight:500;letter-spacing:4px;text-align:center;color:#fff}nav div button i{font-size:3rem;color:#fff}nav div .navbar-nav{text-align:center}nav div .navbar-nav .nav-link{margin-bottom:1em;font-size:1.6rem;color:#fff;transition:color .3s}nav div .navbar-nav .nav-link:hover{color:#258446}.main-header{position:relative;height:55vh;background-image:url(/dist/img/demolition-14824_640.jpg);background-size:cover;background-position:50%;color:#fff;text-align:center;padding:100px 0;z-index:0}.main-header .header-content{max-width:800px;margin:0 auto}.main-header .header-content h1{padding:0 .5em;margin-bottom:20px;font-size:3rem}.main-header .header-content p{margin-bottom:3em;padding:0 2em;font-weight:500}.main-header .header-content .order-button{display:inline-block;margin-top:2em;padding:15px 30px;font-size:2rem;text-decoration:none;background-color:#24b858;color:#fff;border-radius:5px;transition:background-color .3s ease-out}.main-header .header-content .order-button i{margin-right:.5em}.main-header .header-content .order-button span{font-weight:500;text-transform:uppercase}.main-header .header-content .order-button:hover{background-color:#22723e}.main-header .shadow{position:absolute;top:0;left:0;width:100%;height:100%;background-color:rgba(0,0,0,.4);z-index:-5}.aboutus{background-color:#f5f5f5;padding:40px}.aboutus .section-content{max-width:800px;margin:0 auto}.aboutus .section-content .section-description span{color:#24b858;font-weight:500}.aboutus .section-content ul{list-style-type:none;padding:2em}.aboutus .section-content li{margin-bottom:10px;padding-left:1em;position:relative}.aboutus .section-content li:before{content:"â€¢";color:#27ae60;font-weight:700;display:inline-block;width:1em;margin-left:-1em;position:absolute;left:0}.waste-collection{background-color:#fff;padding:40px}.waste-collection .section-content{max-width:800px;margin:0 auto}.waste-collection .section-content .content{margin-bottom:3em}.waste-collection .title{color:#333;font-size:2rem;margin-bottom:10px;text-align:center;font-weight:500}.waste-collection .icon{font-size:4rem;color:#24b858;margin-bottom:10px;text-align:center}.cont{background-color:#f5f5f5;padding:1.5em}.cont .container{max-width:1200px;margin:0 auto}.cont .content{display:flex;flex-direction:column;padding:3em 4em;margin-top:1em;margin-bottom:2em;align-items:center;box-shadow:0 10px 20px rgba(0,0,0,.5)}.cont img{max-width:100%;height:auto;margin-bottom:2em}.cont p{color:#333;font-size:1.6rem;font-weight:500;text-transform:uppercase;text-align:center}.cont .description{font-weight:400;font-size:1.6rem;text-transform:none;margin-bottom:2em}.cont a{text-decoration:none}.cont .button-like-link{display:inline-block;padding:10px 20px;background-color:#24b858;color:#fff;border-radius:5px;transition:background-color .3s ease}.cont .button-like-link:hover{background-color:#22723e}.company-reach{background-color:#fff;padding:40px}.company-reach .section-content{max-width:800px;margin:0 auto;text-align:center}.company-reach .map-image img{max-width:100%;height:auto;margin-top:20px;border:1px solid #ddd;border-radius:5px;box-shadow:0 0 10px rgba(0,0,0,.1)}.consulting-section{background-color:#f9f9f9;padding:40px}.consulting-section .consulting-content{max-width:800px;margin:0 auto;text-align:center}.consulting-section .consulting-content .consulting-description{color:#666;font-size:1.6rem}.contact-section{background-color:#fff;padding:40px}.contact-section .contact-content{max-width:800px;margin:0 auto;text-align:center}.contact-section .contact-info{padding:1em 2em;color:#666;font-size:1.6rem}.contact-section .contact-info i{margin-right:10px}.contact-section .contact-info a{color:#24b858;text-decoration:none;transition:color .3s ease}.contact-section .contact-info a:hover{color:#22723e}.site-footer{background-color:#333;color:#fff;padding:20px 0}.site-footer a{color:#fff;text-decoration:none}.site-footer a:hover{text-decoration:underline}.site-footer .footer-content{max-width:800px;margin:0 auto;padding:1em 2em;display:flex;flex-direction:column;justify-content:center;align-items:center;text-align:center;font-size:1.6rem}.site-footer .footer-content .footer-right #disabled-link{color:#999;cursor:not-allowed;text-decoration:none;pointer-events:none}.site-footer .footer-content .footer-right #disabled-link:hover{color:#999}.containers-aleksandrow{background-color:#f8f9fa;padding:60px 0}@keyframes a{50%{scale:0}to{scale:1}}@media (min-width:576px){.cont .content{width:45%;margin-right:1em}}@media (min-width:768px){.cont .content{width:45%;margin-right:1em}}@media (min-width:992px){nav div a{margin-right:1em}nav div a:last-child{margin-right:0}nav div .navbar-nav .nav-link{margin-bottom:0}nav .waste-collection .section-content .content{margin-bottom:3em}.cont .content{width:40%;margin-right:1em}.company-reach{background-color:#fff;padding:40px}.company-reach .section-content{display:flex;max-width:800px;margin:0 auto;text-align:center}.company-reach .section-content .box-contenet{display:flex;flex-direction:column;justify-content:center;align-items:center;width:40%;margin-right:1em}.company-reach .section-content .map-image img{max-width:100%;height:auto;margin-top:20px;border:1px solid #ddd;border-radius:5px;box-shadow:0 0 10px rgba(0,0,0,.1)}}@media (max-width:320px){.contact-section .contact-info{font-size:0}.contact-section .contact-info i,.contact-section .contact-info p{font-size:1.6rem}.contact-section .contact-info a{font-size:1.5rem}.contact-section .contact-info a:hover{color:#22723e}.main-header{position:relative;height:65vh;background-image:url(/dist/img/demolition-14824_640.jpg);background-size:cover;background-position:50%;color:#fff;text-align:center;padding:100px 0;z-index:0}.main-header .header-content{max-width:800px;margin:0 auto}.main-header .header-content h1{padding:0 .5em;margin-bottom:20px;font-size:2.2rem}.main-header .header-content p{margin-bottom:1em;padding:0 2em;font-size:1.4rem;font-weight:500}.main-header .header-content .order-button{display:inline-block;padding:15px 30px;font-size:1.4rem;text-decoration:none;background-color:#24b858;color:#fff;border-radius:5px;transition:background-color .3s ease-out}.main-header .header-content .order-button i{margin-right:.5em}.main-header .header-content .order-button span{font-weight:500;text-transform:uppercase}.main-header .header-content .order-button:hover{background-color:#22723e}.main-header .shadow{position:absolute;top:0;left:0;width:100%;height:100%;background-color:rgba(0,0,0,.4);z-index:-5}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
